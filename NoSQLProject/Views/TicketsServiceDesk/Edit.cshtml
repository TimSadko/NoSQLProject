@model NoSQLProject.Models.Ticket

@{
    ViewData["Title"] = "Edit Ticket";
}

<partial name="_ErrorMessage" />

<form action="/TicketsServiceDesk/Edit" method="post">
    <input type="hidden" id="Id" name="Id" value="@Model?.Id" />   

    <div class="form-group py-2 text-start">
        <label for="Title">Title:</label>
        <input type="text" id="Title" name="Title" class="form-control input-background" required value="@Model?.Title" />
    </div>

    <div class="form-group py-2 text-start">
        <label for="Description">Description:</label>
        <input type="text" id="Description" name="Description" class="form-control input-background" required value="@Model?.Description" />
    </div>

    <div class="form-group py-2 text-start">
        <label for="Description">Status:</label>
        <select id="Status" name="Status" asp-for="Status" asp-items="@Html.GetEnumSelectList<Ticket_Status>()"></select>
    </div>    

    <button type="submit" class="primary-button">Edit</button>
</form>


<div class="form-group py-2 text-start">
    <label>Logs:</label>
    @{
        if (Model?.Logs.Count == 0)
        {
            <div>No logs yet</div>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>Created By</th>
                        <th>Creation Time</th>
                        <th>New Status</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (Log log in Model.Logs)
                        {
                            <tr>
                                <th></th>
                                <th>@log.CreatedAt</th>
                                <th>@log.NewStatus</th>
                                @if (string.IsNullOrEmpty(log.Description)) // If deescription is empty
                                {
                                    <th>-</th>
                                }
                                else
                                {
                                    if (log.Description.Length > 100) // If it is too long, cut it
                                    {
                                        <th>@(log.Description.Substring(0, 100))...</th>
                                    }
                                    else // If it is short enough, put it ass it is
                                    {
                                        <th>@(log.Description.Substring(0, log.Description.Length))</th>
                                    }
                                }
                            </tr>
                        }
                    }
                </tbody>
            </table>
        }
    }  
    <a href="/TicketsServiceDesk/AddLog/@Model.Id">Add New Log</a>
</div>

<a href="/TicketsServiceDesk/Index">Back to Ticket List</a>

@* <input type="hidden" id="CreatedById" name="CreatedById" value="@Model?.CreatedById" />
    <input type="hidden" id="UpdatedAt" name="UpdatedAt" value="@Model?.UpdatedAt" />
    <input type="hidden" id="CreatedAt" name="CreatedAt" value="@Model?.CreatedAt" />
    <input type="hidden" id="Logs" name="Logs" value="@Model?.Logs" /> *@
